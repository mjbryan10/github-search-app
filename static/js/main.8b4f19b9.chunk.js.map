{"version":3,"sources":["components/Search.js","components/Repo.js","components/Repos.js","components/Result.js","components/Results.js","components/scroll/ScrollUp.js","components/loader/Loader.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","searchVal","onSearchType","onSearchSubmit","className","type","value","placeholder","onChange","onClick","Repo","state","hasLoaded","isLoading","showInfo","toggleInfo","setState","convertISO","iso","Date","toDateString","this","repo","id","html_url","name","forks_count","stargazers_count","watchers_count","description","open_issues_count","updated_at","key","href","Component","Repos","array","i","repos","push","repoIterator","map","Result","followers","updateState","prop","url","a","fetch","then","response","json","data","userData","followers_url","repos_url","resetSearch","login","avatar_url","src","alt","length","Results","renderAmount","n","items","user","ScrollUp","isScrolled","scrollActivate","y","window","scrollY","addEventListener","e","preventDefault","startPosition","pageYOffset","distance","startTime","requestAnimationFrame","animation","currentTime","t","timeElapsed","run","scrollTo","smoothScroll","Loader","App","target","getResults","alert","console","error","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2UAEe,SAASA,EAAOC,GAAQ,IAChCC,EAA4CD,EAA5CC,UAAWC,EAAiCF,EAAjCE,aAAcC,EAAmBH,EAAnBG,eAC/B,OACC,8BACC,2BACCC,UAAW,aACXC,KAAK,OACLC,MAAOL,EACPM,YAAY,oCACZC,SAAUN,IAEX,2BAAOE,UAAU,aAAaC,KAAK,SAASC,MAAM,SAASG,QAASN,K,YCXlDO,E,2MACpBC,MAAQ,CACPC,WAAW,EACXC,WAAW,EACXC,UAAU,G,EAEXC,WAAa,WACZ,EAAKJ,MAAMG,SACR,EAAKE,SAAS,CAAEF,UAAU,IAC1B,EAAKE,SAAS,CAAEF,UAAU,K,EAE9BG,WAAa,SAAAC,GAEZ,OADW,IAAIC,KAAKD,GACRE,gB,wEAEH,IAAD,EAWJC,KAAKrB,MAAMsB,KATdC,EAFO,EAEPA,GACAC,EAHO,EAGPA,SACAC,EAJO,EAIPA,KACAC,EALO,EAKPA,YACAC,EANO,EAMPA,iBACAC,EAPO,EAOPA,eACAC,EARO,EAQPA,YACAC,EATO,EASPA,kBACAC,EAVO,EAUPA,WAED,OACC,yBAAK3B,UAAU,OAAO4B,IAAKT,EAAId,QAASY,KAAKN,YAC5C,yBAAKX,UAAU,eACd,uBAAG6B,KAAMT,GAAWC,GACpB,yBAAKrB,UAAU,mBACd,2BACC,uBAAGA,UAAU,uBADd,KAC0CsB,GAE1C,2BACC,uBAAGtB,UAAU,gBADd,KACmCuB,GAEnC,2BACC,uBAAGvB,UAAU,eADd,KACkCwB,KAIpC,yBAAKxB,UAAW,cAAiBiB,KAAKV,MAAMG,SAAsB,GAAX,WACtD,4BACEe,EACA,4BACC,2BACC,+CACCA,IAGA,KACJ,4BACC,2BACC,0CACCC,IAGH,4BACC,2BACC,gDACCT,KAAKJ,WAAWc,Y,GA9DSG,aCCnB,SAASC,EAAMnC,GAS7B,OACC,yBAAKI,UAAU,mBAThB,WACC,IAAIgC,EAAQ,GACZ,IAAK,IAAIC,KAAKrC,EAAMsC,MAAO,CAC1B,IAAIhB,EAAOtB,EAAMsC,MAAMD,GACvBD,EAAMG,KAAKjB,GAEZ,OAAOc,EAILI,GAAeC,KAAI,SAAAnB,GAAI,OACvB,kBAAC,EAAD,CAAMU,IAAKV,EAAKC,GAAID,KAAMA,Q,ICZToB,E,2MACpB/B,MAAQ,CACPE,WAAW,EACXD,WAAW,EACX+B,UAAW,GACXL,MAAO,I,EAERM,Y,uCAAc,WAAOC,EAAMC,GAAb,SAAAC,EAAA,sEACPC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKpC,SAAL,eAAiB6B,EAAOO,OAH1B,2C,2IAKO,IACdC,EAAahC,KAAKrB,MAAlBqD,SACNhC,KAAKuB,YAAY,YAAaS,EAASC,eACvCjC,KAAKuB,YAAY,QAASS,EAASE,a,+BAE1B,IAAD,EACwBlC,KAAKrB,MAA/BqD,EADE,EACFA,SAAUG,EADR,EACQA,YADR,EAEmBnC,KAAKV,MAA1BgC,EAFE,EAEFA,UAAWL,EAFT,EAESA,MACXmB,EAAsBJ,EAAtBI,MAAOC,EAAeL,EAAfK,WACb,OACC,yBAAKtD,UAAU,mBAAmB4B,IAAKqB,EAAS9B,IAC/C,2BACCnB,UAAU,eACVC,KAAK,SACLC,MAAM,IACNG,QAAS+C,IAEV,yBAAKpD,UAAU,iBACd,yBAAKuD,IAAKD,EAAYE,IAAI,YAAYxD,UAAYsD,EAAa,GAAK,eACpE,yBAAKtD,UAAU,cACd,4BAAKqD,GACL,yCAAed,EAAUkB,QACzB,4CAAkBvB,EAAMuB,UAG1B,kBAAC1B,EAAD,CAAOG,MAAOA,S,GArCkBJ,aCAf4B,E,2MACpBC,aAAe,WAAqC,IAApCC,EAAmC,uDAA/B,EAAKhE,MAAMqD,SAASQ,OAC7BzB,EAAQ,GACR4B,EAAI,EAAKhE,MAAMqD,SAASQ,SACxBG,EAAI,EAAKhE,MAAMqD,SAASQ,QAElC,IAAK,IAAIxB,EAAI,EAAGA,EAAI2B,EAAG3B,IACtBD,EAAMG,KAAK,EAAKvC,MAAMqD,SAASY,MAAM5B,IAEhC,OAAOD,G,wEAEJ,IAAD,OACR,OACC,yBAAKhC,UAAU,qBACbiB,KAAK0C,aAAa,GAAGtB,KAAI,SAAAyB,GAAI,OAC7B,kBAAC,EAAD,CAAQb,SAAUa,EAAMlC,IAAKkC,EAAK3C,GAAIiC,YAAa,EAAKxD,MAAMwD,sB,GAf9BtB,aCAhBiC,G,iNACpBxD,MAAQ,CACPyD,YAAY,G,EAKbC,eAAiB,WAChB,IACIC,EAAIC,OAAOC,QACXF,GAFS,IAGZ,EAAKtD,SAAS,CAACoD,YAAY,IACjBE,EAJE,KAKZ,EAAKtD,SAAS,CAACoD,YAAY,K,mFAR5BG,OAAOE,iBAAiB,SAAUpD,KAAKgD,kB,mCAW3BK,GACZA,EAAEC,iBACF,IAGIC,EAAgBL,OAAOM,YACvBC,EAFiB,EAEWF,EAC5BG,EAAY,KAahBC,uBAZA,SAASC,EAAUC,GACA,OAAdH,IAAoBA,EAAYG,GACpC,IAKaC,EALTC,EAAcF,EAAcH,EAC5BM,GAISF,EAJEC,EAA4BN,GAM3CK,GAfc,KAgBCA,EAAIA,EAPSP,GAC5BL,OAAOe,SAAS,EAAGD,GACfD,EAXU,KAWcJ,sBAAsBC,Q,+BAUnD,OACC,yBAAK7E,UAAW,oBAAsBiB,KAAKV,MAAMyD,WAAa,UAAY,KAEzE,uBAAGnC,KAAK,IAAI7B,UAAU,cAAcK,QAASY,KAAKkE,cAAlD,e,GA1CkCrD,c,MCCvB,SAASsD,IACpB,OACI,yBAAKpF,UAAU,YAAW,8BAAW,8BAAW,8BAAW,+B,ICG9CqF,E,2MACpB9E,MAAQ,CACPC,WAAW,EACXC,WAAW,EACXZ,UAAW,GACXoD,SAAU,I,EAEXnD,aAAe,SAAAwE,GAEdA,EAAEC,iBACF,EAAK3D,SAAS,CAAEf,UAAWyE,EAAEgB,OAAOpF,S,EAErCH,eAAiB,SAAAuE,GAEhBA,EAAEC,iBACE,EAAKhE,MAAMV,WACd,EAAKe,SAAS,CAAEJ,WAAW,EAAOC,WAAW,IAC7C,EAAK8E,WAAW,EAAKhF,MAAMV,WAAWgD,MAAK,SAAAI,GAC1C,EAAKrC,SAAS,CAAEqC,WAAUzC,WAAW,EAAMC,WAAW,QAGvD0D,OAAOqB,MAAM,qC,EAGfpC,YAAc,WACb,EAAKxC,SAAS,CAAEJ,WAAW,EAAOX,UAAW,M,EAE9C0F,W,uCAAa,WAAM1F,GAAN,iBAAA8C,EAAA,+EAEUC,MAAM,yCAAD,OAA0C/C,IAFzD,cAEPiD,EAFO,gBAGMA,EAASC,OAHf,cAGPC,EAHO,yBAIJA,GAJI,kCAMXyC,QAAQC,MAAR,MANW,0D,8HASH,IAAD,EAC4CzE,KAAKV,MAAnDV,EADE,EACFA,UAAWY,EADT,EACSA,UAAWD,EADpB,EACoBA,UAAWyC,EAD/B,EAC+BA,SACvC,OACC,yBAAKjD,UAAU,OACd,yBAAKA,UAAU,qBACd,4BAAQA,UAAU,cACjB,kCACI,wCADJ,cAID,kBAACL,EAAD,CACCE,UAAWA,EACXC,aAAcmB,KAAKnB,aACnBC,eAAgBkB,KAAKlB,iBAErBU,EAAY,kBAAC2E,EAAD,MAAa,KACzB5E,GAAayC,EAASY,MAAMJ,OAC5B,kBAAC,EAAD,CAASR,SAAUA,EAAUG,YAAanC,KAAKmC,cAC5C,KACH5C,IAAcyC,EAASY,MAAMJ,OAC7B,+FACG,MAEL,kBAAC,EAAD,MACA,gCACC,6DACA,yCACY,uBAAG5B,KAAK,oCAAR,kBAEZ,6CACiB,IAChB,uBAAGA,KAAK,sDAAR,kB,GAnE2BC,aCGb6D,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxD,MAAK,SAAAyD,GACjCA,EAAaC,kB","file":"static/js/main.8b4f19b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Search(props) {\r\n\tlet { searchVal, onSearchType, onSearchSubmit } = props;\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<input\r\n\t\t\t\tclassName={\"search-bar\"}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={searchVal}\r\n\t\t\t\tplaceholder=\"Search for your Github superhero!\"\r\n\t\t\t\tonChange={onSearchType}\r\n\t\t\t/>\r\n\t\t\t<input className=\"search-btn\" type=\"submit\" value=\"Search\" onClick={onSearchSubmit} />\r\n\t\t</form>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Repo extends Component {\r\n\tstate = {\r\n\t\thasLoaded: false,\r\n\t\tisLoading: false,\r\n\t\tshowInfo: false,\r\n\t};\r\n\ttoggleInfo = () => {\r\n\t\tthis.state.showInfo\r\n\t\t\t? this.setState({ showInfo: false })\r\n\t\t\t: this.setState({ showInfo: true });\r\n\t};\r\n\tconvertISO = iso => {\r\n\t\tlet date = new Date(iso);\r\n\t\treturn date.toDateString();\r\n\t};\r\n\trender() {\r\n\t\tlet {\r\n\t\t\tid,\r\n\t\t\thtml_url,\r\n\t\t\tname,\r\n\t\t\tforks_count,\r\n\t\t\tstargazers_count,\r\n\t\t\twatchers_count,\r\n\t\t\tdescription,\r\n\t\t\topen_issues_count,\r\n\t\t\tupdated_at,\r\n\t\t} = this.props.repo;\r\n\t\treturn (\r\n\t\t\t<div className=\"repo\" key={id} onClick={this.toggleInfo}>\r\n\t\t\t\t<div className=\"repo-header\">\r\n\t\t\t\t\t<a href={html_url}>{name}</a>\r\n\t\t\t\t\t<div className=\"stats-container\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-code-branch\"></i>: {forks_count}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-star\"></i>: {stargazers_count}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-eye\"></i>: {watchers_count}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"repo-info \" + (!this.state.showInfo ? \"hidden\" : \"\")}>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{description ? (\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span>Description: </span>\r\n\t\t\t\t\t\t\t\t\t{description}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<span>Issues: </span>\r\n\t\t\t\t\t\t\t\t{open_issues_count}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<span>Last updated: </span>\r\n\t\t\t\t\t\t\t\t{this.convertISO(updated_at)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport Repo from \"./Repo\";\r\n\r\nexport default function Repos(props) {\r\n\tfunction repoIterator() {\r\n\t\tlet array = [];\r\n\t\tfor (let i in props.repos) {\r\n\t\t\tlet repo = props.repos[i];\r\n\t\t\tarray.push(repo);\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"repos-container\">\r\n\t\t\t{repoIterator().map(repo => (\r\n\t\t\t\t<Repo key={repo.id} repo={repo} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Repos from './Repos'\r\n\r\nexport default class Result extends Component {\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\thasLoaded: false,\r\n\t\tfollowers: {},\r\n\t\trepos: {},\r\n\t};\r\n\tupdateState = async (prop, url) => {\r\n\t\tawait fetch(url)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => this.setState({ [prop]: data }));\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tlet { userData } = this.props;\r\n\t\tthis.updateState('followers', userData.followers_url);\r\n\t\tthis.updateState('repos', userData.repos_url);\r\n\t}\r\n\trender() {\r\n\t\tlet { userData, resetSearch } = this.props;\r\n\t\tlet { followers, repos } = this.state;\r\n\t\tlet { login, avatar_url } = userData;\r\n\t\treturn (\r\n\t\t\t<div className=\"result-container\" key={userData.id}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"result-reset\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tvalue=\"X\"\r\n\t\t\t\t\tonClick={resetSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"result-header\">\r\n\t\t\t\t\t<img src={avatar_url} alt=\"User Logo\" className={(avatar_url ? \"\" : \"default-bg\")} />\r\n\t\t\t\t\t<div className=\"result-bio\">\r\n\t\t\t\t\t\t<h3>{login}</h3>\r\n\t\t\t\t\t\t<p>Followers: {followers.length}</p>\r\n\t\t\t\t\t\t<p>Repositories: {repos.length}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Repos repos={repos} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Result from \"./Result\";\r\n\r\nexport default class Results extends Component {\r\n\trenderAmount = (n = this.props.userData.length) => {\r\n        let array = [];\r\n        if (n > this.props.userData.length) {\r\n            n = this.props.userData.length\r\n        }\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tarray.push(this.props.userData.items[i]);\r\n        }\r\n        return array\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"results-container\">\r\n\t\t\t\t{this.renderAmount(1).map(user => (\r\n\t\t\t\t\t<Result userData={user} key={user.id} resetSearch={this.props.resetSearch} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./scrollUp.scss\";\r\n\r\nexport default class ScrollUp extends Component {\r\n\tstate = {\r\n\t\tisScrolled: false,\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\twindow.addEventListener(\"scroll\", this.scrollActivate);\r\n\t}\r\n\tscrollActivate = () => {\r\n\t\tlet height = 400; // Change this number depending on where you wish it to appear.\r\n\t\tlet y = window.scrollY;\r\n\t\tif (y >= height) {\r\n\t\t\tthis.setState({isScrolled: true})\r\n\t\t} else if (y < height) {\r\n\t\t\tthis.setState({isScrolled: false})\r\n\t\t}\r\n\t};\r\n\tsmoothScroll(e) {\r\n\t\te.preventDefault();\r\n\t\tlet duration = 1000;\r\n\r\n\t\tlet targetPosition = 0;\r\n\t\tlet startPosition = window.pageYOffset;\r\n\t\tlet distance = targetPosition - startPosition;\r\n\t\tlet startTime = null;\r\n\t\tfunction animation(currentTime) {\r\n\t\t\tif (startTime === null) startTime = currentTime;\r\n\t\t\tlet timeElapsed = currentTime - startTime;\r\n\t\t\tlet run = ease(timeElapsed, startPosition, distance, duration);\r\n\t\t\twindow.scrollTo(0, run);\r\n\t\t\tif (timeElapsed < duration) requestAnimationFrame(animation);\r\n\t\t}\r\n\t\tfunction ease(t, b, c, d) {\r\n\t\t\t//http://gizma.com/easing/ for equations\r\n\t\t\tt /= d;\r\n\t\t\treturn c * t * t * t + b;\r\n\t\t}\r\n\t\trequestAnimationFrame(animation);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"scroll-container\" + (this.state.isScrolled ? ' active' : '')}>\r\n\t\t\t\t{/*eslint-disable-next-line jsx-a11y/anchor-is-valid*/}\r\n\t\t\t\t<a href=\"#\" className=\"scroll-text\" onClick={this.smoothScroll}>\r\n\t\t\t\t\t&uarr;\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport './lds-ripple.css';\r\n\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}","import React, { Component } from \"react\";\nimport \"./App.scss\";\n\nimport Search from \"./components/Search\";\nimport Results from \"./components/Results\";\n\nimport ScrollUp from \"./components/scroll/ScrollUp\";\nimport Loader from \"./components/loader/Loader\";\n\nexport default class App extends Component {\n\tstate = {\n\t\thasLoaded: false,\n\t\tisLoading: false,\n\t\tsearchVal: \"\", //the submitted search string\n\t\tuserData: {}, //Data fetched from GitHub API\n\t};\n\tonSearchType = e => {\n\t\t//Updates state with search String\n\t\te.preventDefault();\n\t\tthis.setState({ searchVal: e.target.value });\n\t};\n\tonSearchSubmit = e => {\n\t\t//Validates search string, then fetches data + updates state\n\t\te.preventDefault();\n\t\tif (this.state.searchVal) {\n\t\t\tthis.setState({ hasLoaded: false, isLoading: true });\n\t\t\tthis.getResults(this.state.searchVal).then(userData => {\n\t\t\t\tthis.setState({ userData, hasLoaded: true, isLoading: false });\n\t\t\t});\n\t\t} else {\n\t\t\twindow.alert(\"Enter some text then hit search.\");\n\t\t}\n\t};\n\tresetSearch = () => {\n\t\tthis.setState({ hasLoaded: false, searchVal: \"\" });\n\t};\n\tgetResults = async searchVal => { //Fetches users\n\t\ttry {\n\t\t\tlet response = await fetch(`https://api.github.com/search/users?q=${searchVal}`);\n\t\t\tlet data = await response.json();\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\trender() {\n\t\tlet { searchVal, isLoading, hasLoaded, userData } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"content-container\">\n\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\tMy <span>GitHub</span> Searcher\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</header>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tsearchVal={searchVal}\n\t\t\t\t\t\tonSearchType={this.onSearchType}\n\t\t\t\t\t\tonSearchSubmit={this.onSearchSubmit}\n\t\t\t\t\t/>\n\t\t\t\t\t{isLoading ? <Loader /> : null}\n\t\t\t\t\t{hasLoaded && userData.items.length ? (\n\t\t\t\t\t\t<Results userData={userData} resetSearch={this.resetSearch} />\n\t\t\t\t\t) : null}\n\t\t\t\t\t{hasLoaded && !userData.items.length ? (\n\t\t\t\t\t\t<p>Oops! Something went wrong, please try again or checkback later.</p>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<ScrollUp />\n\t\t\t\t<footer>\n\t\t\t\t\t<p>Created by Matthew James Bryan</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPowered by <a href=\"https://developer.github.com/v3/\">GitHub API v3</a>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLogo created by{\" \"}\n\t\t\t\t\t\t<a href=\"https://www.freepik.com/free-photos-vectors/design\">freepik</a>\n\t\t\t\t\t</p>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}